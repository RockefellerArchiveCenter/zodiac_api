AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Zodiac API API Gateway
  
  API Gateway API to support user interface for Zodiac

Parameters:
  ApplicationEnvironment:
    Type: String
    Description: Environment in which the application should be deployed.
    AllowedValues:
      - dev
      - prod
  ApplicationName:
    Type: String
    Description: Name of the application to be deployed.
  StageName:
    Type: String
    Default: v1
    Description: Name of API stage.
  CreateEventLambdaArn:
    Type: String
    Description: Arn for Lambda for creating events
  CreatePackageLambdaArn:
    Type: String
    Description: Arn for Lambda for creating packages
  GetEventLambdaArn:
    Type: String
    Description: Arn for Lambda for getting an event
  GetPackageLambdaArn:
    Type: String
    Description: Arn for Lambda for getting a package
  ListEventsLambdaArn:
    Type: String
    Description: Arn for Lambda for listing events
  ListPackagesLambdaArn:
    Type: String
    Description: Arn for Lambda for listing packages
  ListPackageEventsLambdaArn:
    Type: String
    Description: Arn for Lambda for listing package events
  UpdateEventLambdaArn:
    Type: String
    Description: Arn for Lambda for updating events
  UpdatePackageLambdaArn:
    Type: String
    Description: Arn for Lambda for updating packages

Resources:
  ZodiacApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ZodiacApi

  EventsListResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ZodiacApi.RootResourceId
      RestApiId: !Ref ZodiacApi
      PathPart: 'events'

  EventsListResourcePost:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref EventsListResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateEventLambdaArn}/invocations

  EventsListResourcePostPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref CreateEventLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/POST/events'

  EventsListResourceGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref EventsListResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListEventsLambdaArn}/invocations

  EventsListResourceGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ListEventsLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/GET/events'

  EventsDetailResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref EventsListResource
      RestApiId: !Ref ZodiacApi
      PathPart: '{event_id}'

  EventsDetailResourceGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref EventsDetailResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetEventLambdaArn}/invocations

  EventsDetailResourceGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref GetEventLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/GET/events/{event_id}'
  
  EventsDetailResourcePut:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref EventsDetailResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateEventLambdaArn}/invocations

  EventsDetailResourcePutPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref UpdateEventLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/PUT/events/{event_id}'

  PackagesListResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ZodiacApi.RootResourceId
      RestApiId: !Ref ZodiacApi
      PathPart: 'packages'

  PackagesListResourcePost:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref PackagesListResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreatePackageLambdaArn}/invocations

  PackagesListResourcePostPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref CreatePackageLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/POST/packages'

  PackagesListResourceGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref PackagesListResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListPackagesLambdaArn}/invocations

  PackagesListResourceGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ListPackagesLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/GET/packages'

  PackagesDetailResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref PackagesListResource
      RestApiId: !Ref ZodiacApi
      PathPart: '{package_id}'

  PackagesDetailResourceGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref PackagesDetailResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPackageLambdaArn}/invocations
  
  PackagesDetailResourceGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref GetPackageLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/GET/packages/{package_id}'

  PackagesDetailResourcePut:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref PackagesDetailResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdatePackageLambdaArn}/invocations

  PackagesDetailResourcePutPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref UpdatePackageLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/PUT/packages/{package_id}'

  PackageEventsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref PackagesDetailResource
      RestApiId: !Ref ZodiacApi
      PathPart: 'events'

  PackageEventsResourceGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZodiacApi
      ResourceId: !Ref PackageEventsResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListPackageEventsLambdaArn}/invocations

  PackageEventsResourceGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref ListPackageEventsLambdaArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZodiacApi}/*/GET/packages/{package_id}/events'

  ApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - EventsListResourceGet
      - EventsListResourcePost
      - EventsDetailResourceGet
      - EventsDetailResourcePut
      - PackagesListResourceGet
      - PackagesListResourcePost
      - PackagesDetailResourceGet
      - PackagesDetailResourcePut
    Properties:
      RestApiId: !Ref ZodiacApi
      StageName: !Sub '${StageName}'